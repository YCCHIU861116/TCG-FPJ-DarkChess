/*! \file eopXD.h
    \brief header file for searching agent of CDC
    \author Yueh-Ting Chen, modified from project held by Jr-Chang Chen
    \course Theory of Computer Game (TCG)
*/

#ifndef CDC
#define CDC
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cmath>
#include <algorithm>

#define RED 0
#define BLACK 1
#define CHESS_COVER 8
#define CHESS_EMPTY 0
#define COMMAND_NUM 18
#define HASH_TABLE_SIZE_N 22
#define HASH_TABLE_SIZE 4194304
struct table_entry
{
	int hash_value;
	int depth;
	int best_value;
	int best_move;
	int exact;//0:empty/ 1:exact /2: lower bound /3: upper bound
};
class CDCagent 
{
enum { 
	EMPTY=0,
	RK, RG, RM, RR, RN, RC, RP,
	CLOSE,
	BK, BG, BM, BR, BN, BC, BP,
	NUM_KIND
};
const char* commands_name[COMMAND_NUM] = {
	"protocol_version",
	"name",
	"version",
	"known_command",
	"list_commands",
	"quit",
	"boardsize",
	"reset_board",
	"num_repetition",
	"num_moves_to_draw",
	"move",
	"flip",
	"genmove",
	"game_over",
	"ready",
	"time_settings",
	"time_left",
	"showboard"
};

// Constructor / Destructor
public:
	CDCagent(void);
	~CDCagent(void);
// Commands from DCTP
public:
	bool protocol_version(const char* data[], char* response);// 0
	bool name(const char* data[], char* response);// 1
	bool version(const char* data[], char* response);// 2
	bool known_command(const char* data[], char* response);// 3
	bool list_commands(const char* data[], char* response);// 4
	bool quit(const char* data[], char* response);// 5
	bool boardsize(const char* data[], char* response);// 6
	bool reset_board(const char* data[], char* response);// 7
	bool num_repetition(const char* data[], char* response);// 8
	bool num_moves_to_draw(const char* data[], char* response);// 9
	bool move(const char* data[], char* response);// 10
	bool flip(const char* data[], char* response);// 11
	bool genmove(const char* data[], char* response);// 12
	bool game_over(const char* data[], char* response);// 13
	bool ready(const char* data[], char* response);// 14
	bool time_settings(const char* data[], char* response);// 15
	bool time_left(const char* data[], char* response);// 16
	bool showboard(const char* data[], char* response);// 17
// Utility Provided
public:
	int ConvertChessNo(int input);
	void initBoardState ();
	int FlipList (unsigned  int* Board, int *flip_moves );
	int NonFlipList (unsigned  int* Board,int color,int *non_flip_moves );
	bool IsLegal (unsigned  int* chess,int from_location_no,int to_location_no,int UserId );
	void Print_Chessboard ();
	void Print_Chess ( int chess_no,char *Result );
	int firststep();
	int SEE(unsigned int *Board);
	void Play(char move[6]);
	void MakeMove(const char move[6]);
	int locate(unsigned int* Board, int index);
	void modify(unsigned int* Board, int index, int value);
	int evaluate(unsigned int* Board,unsigned int LiveChess);
	void do_move(unsigned int* Board, unsigned int& LiveChess,long long int &hash_value, int move, int flip) ;
	void move_order(unsigned int* Board, int* non_flip_moves, int total_non_flip);
	int NegaMax(int depth_limit);
	int F4(unsigned int* Board,unsigned int LiveChess,long long int hash_value, int alpha, int beta, int depth, int& answer);
private:
	int Color;
	int plies;
	int Red_Time, Black_Time;
	unsigned int Board[4];
	unsigned int LiveChess;
	int hash_value;
};
//const int color_rand[2] = {675736,2736904};

const long long int random_num[512] =
{881270385138481005LL,
7171032300998523378LL,
7797667586052497801LL,
8939765697518849675LL,
1617886622623159490LL,
8146366571416696577LL,
3056459376864899768LL,
-663262993679893227LL,
6303480209654456876LL,
8142076235743225997LL,
-4027985429664014132LL,
6384379441771561011LL,
6087918645358425987LL,
7730742653419286442LL,
1379855347383968726LL,
5749474275275448337LL,
1787748685733911361LL,
-3918402453822296391LL,
6043987401408435927LL,
1172946972107869561LL,
-8007307604943355377LL,
-1264416516041375177LL,
6138132390420955844LL,
-5405678393461351606LL,
5041409814486963002LL,
-3430910353741192764LL,
8200519376225446924LL,
-3853267727176677953LL,
4347689534346523124LL,
-4045697444614392981LL,
-6724352436925732434LL,
991117183781778123LL,
2873736233233711881LL,
-8611821057459441527LL,
-4822784400799553666LL,
-2929638754398370182LL,
7189280994329180980LL,
-8281590716286074897LL,
3973695698607537884LL,
-212675618743000865LL,
5032122427837888723LL,
-4115221876054404491LL,
-2166236435610711885LL,
-3554898816499939790LL,
-5821326430064634872LL,
-8021500657734621691LL,
-8545293323381171591LL,
-3284576873468954562LL,
6763333686095197122LL,
5739149763296391806LL,
-7978153483700333175LL,
692244067608011769LL,
-4283529669173828458LL,
3296350625094928827LL,
-7636216650978787769LL,
1727523428743731343LL,
-6093077062783919750LL,
-4694141159129684022LL,
7212569214154169221LL,
-1583127268848838685LL,
-2090407506478526978LL,
372829897620333749LL,
-3051032713672649805LL,
3977931816176782134LL,
6268215769809908407LL,
-6555372397550870923LL,
1782034040042632221LL,
4952099877002764201LL,
8573673979930509576LL,
-8292959833170761324LL,
-5389787912857158711LL,
2293397183065513613LL,
2698625531698895429LL,
6684262524127527398LL,
-5616102232407794928LL,
4668439765653783279LL,
425973431761721196LL,
-3614198543622766814LL,
-3691431286312479242LL,
9028568571812563474LL,
8769010930117791568LL,
-3709047464894830624LL,
-6513100103114599057LL,
8864713294267972644LL,
-3582219997365942840LL,
7206116273569212706LL,
4268830357200325956LL,
-756640827370449612LL,
885237806000498524LL,
7520499595622187730LL,
-6535933748363667522LL,
2817323115211766375LL,
6909247805600437920LL,
8241906578843971423LL,
6718273717606765352LL,
399668203900981974LL,
2032715960292368361LL,
1968829476256515549LL,
-7549944534716519869LL,
-8183279428148025250LL,
-1221092407485133629LL,
-4221723939435494811LL,
-4572620938809688852LL,
2884103325634411280LL,
1560899842541621097LL,
-7687506502892756838LL,
6943911040323471532LL,
-2364432987373506100LL,
552395445267822903LL,
8931162269397728151LL,
1073823463277230094LL,
-8373986182981545792LL,
4974822137747837821LL,
-1034003557273587190LL,
-4044501506063637431LL,
1762434688930758364LL,
318439884967291989LL,
-8751145904323491559LL,
1097292867415596494LL,
-5224747535002111538LL,
6096781329271441043LL,
1787158852892842982LL,
3327639456266973615LL,
-7103526672176617849LL,
-1950858646243753234LL,
3952246898958790384LL,
-9194593953147007375LL,
8548473034180024843LL,
2682747487102457513LL,
-58406672322728631LL,
7286355081293792612LL,
-5719183580038441554LL,
6640626413844992799LL,
5452310768183883381LL,
-8027434246302995108LL,
5746195473564763152LL,
-8642514725780132930LL,
1851064009018690794LL,
-2165330160211865526LL,
4534970008347875722LL,
1317610367496966760LL,
1720347765285496999LL,
7965744105434035727LL,
-4612889621170715967LL,
6700554751835424859LL,
-6707773911118295834LL,
7361455604865167156LL,
5013428436119975473LL,
-8040538129730901220LL,
6989829051571265244LL,
3646237263210170421LL,
-8356500428323608324LL,
-5218517016904717308LL,
-1404513657629861395LL,
5870938862235979974LL,
-3660787317398910767LL,
-3024793249478391287LL,
8350003027157098398LL,
-2861395114006471562LL,
8651183181408457427LL,
-6140397168279189689LL,
-581105535967070479LL,
6060138273522063890LL,
4374683317149612422LL,
-9030993633470095181LL,
7662888179765661001LL,
-8298713138144698256LL,
2856987384409161741LL,
-4600978344328009658LL,
1951611239632455545LL,
1671995200693561377LL,
4695441979531868460LL,
595005190221126907LL,
7743929970654484770LL,
7079034893561527862LL,
4548920403209768105LL,
-7183471773018224834LL,
1624682252064834507LL,
1648590215012107303LL,
8545512018638707096LL,
-4781826723192605065LL,
782309851006724706LL,
8796930605313706847LL,
249328363267150294LL,
575542745740619986LL,
-8505600166456414926LL,
-6426929797604164829LL,
4950218525404499604LL,
2990646201802160273LL,
-5205382346088886423LL,
-6397764358206341324LL,
1695334058528415442LL,
8374473670816658678LL,
-3821970470987980581LL,
160820028370445392LL,
6259550679236572114LL,
8868733191422648587LL,
4270845024203485835LL,
394202694997945431LL,
-7893575127448266298LL,
-199208535484720004LL,
5603851257822372631LL,
-3307628827550977136LL,
-3230982269484666422LL,
5932096089703064274LL,
-3202501941986583996LL,
206894210675461004LL,
4632588129699219107LL,
7252501167782407928LL,
8066884246350378930LL,
6187789846555842819LL,
-9131585990085681080LL,
5818320672791352798LL,
8338136667852939533LL,
7035807380238609363LL,
-773554362276174110LL,
-7915380133235210436LL,
-178648372436908210LL,
594895412039148483LL,
-4322016094197096510LL,
-78100161744212893LL,
-7312798273972522102LL,
-2520503146426086746LL,
-8004148511297409537LL,
-4587031777428198432LL,
-2209247711145007724LL,
-8542841930819531103LL,
3392144225000485818LL,
954729811509924275LL,
1665197989154579704LL,
4489790480235298126LL,
6408325271426784091LL,
-7975527114980472914LL,
-2286342098616824774LL,
-3199729062082800159LL,
8091282903896362913LL,
2166054369493144666LL,
-845487486400846875LL,
2055520054676916759LL,
-8491341366297848905LL,
-2056063718348404207LL,
-7642208283757867342LL,
-8315935383709069557LL,
-8977373903347689133LL,
-3225835775567008500LL,
644945731558379679LL,
-1484962449442694198LL,
-8310512879508333800LL,
2246904097515580214LL,
2503474021185652286LL,
7926966897766116467LL,
6332225263340751756LL,
8906442093831911838LL,
-2732948316625556643LL,
-775854981175021048LL,
8808741343495589152LL,
8385366460502503945LL,
-1118973991219696756LL,
-1846244510034873415LL,
-7626507527097866854LL,
4101086710515885877LL,
6283740201187211801LL,
808611089758324809LL,
-6288288765616914873LL,
-7544516238180380479LL,
1500011539748943243LL,
-1404215572359052426LL,
-3145171654081597274LL,
3300832166981795989LL,
-4852643623292188330LL,
4235092917598995116LL,
6951220182174346618LL,
7801664902102012953LL,
365653859325763954LL,
-6433172276452831292LL,
-8340808061977974439LL,
-7249801506610547999LL,
1765216591337617770LL,
3076504058478767323LL,
-7851914797056724851LL,
3626809878425815537LL,
5816188085688038319LL,
-624408044476747323LL,
4185171659349276806LL,
3358255697574162443LL,
2108898260546081719LL,
1589157086978529669LL,
-4156858723974342010LL,
4059809605570126398LL,
8294765139210677944LL,
5488559957731627596LL,
7100188434272799608LL,
-1226794955457583685LL,
-6159427357367327766LL,
-4806227472121409682LL,
-5652303580283018524LL,
-7284409813846789477LL,
3124747399427477333LL,
3903560175511345566LL,
-2564386051458096032LL,
-4342221223652952560LL,
4523628097097968032LL,
-4566011388146683655LL,
2353252609049673757LL,
-4776812756668047726LL,
5614238550065559773LL,
1157010516003932337LL,
5599625252002277052LL,
5239071233609466604LL,
-714135409568862948LL,
4660821448727790103LL,
-6606965530469908198LL,
-7817474848477678437LL,
-6015230007588144250LL,
-8357478451113227142LL,
-243448424181821316LL,
-2792908505672381817LL,
6235148655919509167LL,
-5032802626129015303LL,
-340439356977367910LL,
-4606202124198978784LL,
2900252501534887838LL,
-2782345413910558371LL,
478485524171183663LL,
-9108406850308851126LL,
-1636250284662963819LL,
-8657764574779561919LL,
-2345061641491503357LL,
4115608478388034874LL,
7246914172442531177LL,
5196727323402273722LL,
5209907269715899331LL,
571053894710997576LL,
-1901591073990594337LL,
-5368187187696321475LL,
-7966713817844483617LL,
-5799029551720167072LL,
-7347697222662626163LL,
-3546200747722293082LL,
7344705997785675902LL,
9104601199119396374LL,
-7897434468869449551LL,
8904110959215815619LL,
8450630270257737764LL,
7446425388055346269LL,
-6893043110661467504LL,
-1358723663259420401LL,
647868327137798545LL,
-4956381750524069629LL,
5548297438916967392LL,
-2155796957711640223LL,
-5655811162197101223LL,
5125960407791149636LL,
4930237022604110969LL,
6860103007017615346LL,
1871880249258152663LL,
-6875272956668148136LL,
2947352254378245003LL,
8582262921706705236LL,
-5089945784502334491LL,
-963880121656388139LL,
-1258213301515729700LL,
-3270480676855902655LL,
-3477955945168973558LL,
644378192345330947LL,
4944098975097451221LL,
-3593926439857384448LL,
3351588679048715034LL,
3847834658749672445LL,
-1141449850150340380LL,
5548739150326209431LL,
-2007336225283787794LL,
1743440475214725711LL,
-6803580078009529723LL,
6457452930266090814LL,
-8542425371165272819LL,
6947339247746080933LL,
-6813742792708172484LL,
-2025329900426340790LL,
2263537580690888022LL,
6177243974446046239LL,
-3310987568074065712LL,
-3413486588532635345LL,
2240316902640029769LL,
6877606965907449243LL,
1538733926173714521LL,
4424398539336298894LL,
1034112539161550558LL,
-4460436060870422927LL,
-8186102716978794494LL,
2619439069829872197LL,
2963923172087372814LL,
7669702299944417078LL,
-4143611071543889071LL,
7422593752465175117LL,
-5966335269245320106LL,
-2388575045797057307LL,
-6500443824728414248LL,
-8057479338169409864LL,
3910867102826798737LL,
-1929784606011297957LL,
1021155240082241304LL,
-6562706579660865395LL,
-4463864446380026756LL,
1236805364741720081LL,
-3226117506744431539LL,
8364633075496906029LL,
3314758716589965410LL,
8796331211765895943LL,
-3015064523437981800LL,
3452664026339317307LL,
-7958885279898153487LL,
4712158194616911739LL,
6756359195489138253LL,
3563659185813686074LL,
-3089867654571552910LL,
8957735205602840192LL,
-6544397767100895888LL,
525489189349917872LL,
-5106628327258693841LL,
7612682205307073652LL,
-8054099407749993113LL,
2615158160989854875LL,
3405546379283179380LL,
7188869625083036001LL,
5136067855653232644LL,
-5406564355442066547LL,
3866768736775342973LL,
-2544647377544097468LL,
-8796547253524662188LL,
-8967770393997402253LL,
-6184952745960425464LL,
-3566722034235673967LL,
1070713677564772594LL,
1028166756062478504LL,
-8833559521821232807LL,
4812244963070080281LL,
-2032709870663186287LL,
2972501236745773043LL,
5822773841800216273LL,
-9212123323318017027LL,
-3515398941370827107LL,
-7412459198637728763LL,
-5564041283409487855LL,
551542185923644768LL,
132803487130865167LL,
-1379995000060464267LL,
2318016789029573204LL,
-1746022469136259338LL,
-2159336256104197192LL,
475323714259460806LL,
-6138544232417440497LL,
3410874007701693072LL,
-6386318726988071305LL,
2671490251775963484LL,
-2980143166513262401LL,
1686737357750742091LL,
204895661787981547LL,
2758002820196699069LL,
6636070377027950993LL,
8344040474805085316LL,
2234442349678810450LL,
-6751725639972864071LL,
2043542401716373400LL,
-5220375817347248964LL,
-5124095388791930218LL,
-8449076150759229691LL,
2340175862558576051LL,
1565236532244814978LL,
8251272719634546341LL,
-6384592223733206028LL,
8366172273008750144LL,
-1138340594169183136LL,
-301333900004198645LL,
-8388793317405811705LL,
2215446071682322178LL,
983828770081490492LL,
6679964541389075372LL,
2463873191826393642LL,
3547915204350916689LL,
-532617318561694993LL,
-2434007710921367504LL,
8232162294098741242LL,
-8169167817560879759LL,
-4415614709050063014LL,
936240107714147349LL,
-8174464728137647693LL,
8788557496395541271LL,
3115338427394291935LL,
7318168237723061884LL,
-3714387174752849121LL,
8115960397904956540LL,
-4275661255959725087LL,
-6193758671612795297LL,
1701316522348866545LL,
-211766510199703446LL,
-2224034462220587206LL,
-6687068561014085820LL,
-8676301171758162309LL,
7738056755270699482LL,
2701490947273984262LL,
-5618237048279453627LL,
4583261144579570296LL,
4812156928051719928LL,
3444179326848548681LL,
1629214784784758721LL,
-1017071557154832406LL,
1681345804584047641LL,
-3931852372176908492LL,
5887413656620035076LL,
-5819257127762921741LL,
8387332065269087483LL};

#endif